{"version":3,"file":"component---src-pages-index-tsx-8d3e50627d2abbe1de4c.js","mappings":"2HASgCA,EAJhCC,EAAA,OAAqB,EAUrB,IAAIC,IAN4BF,EAFK,EAAQ,QAG7BA,EAAIG,WAAaH,EAAM,CACnC,QAAWA,IAIiB,QAChCC,EAAA,EAAqBC,G,uLCOfE,EAASC,EAAAA,GAAW,CACxBC,KAAMD,EAAAA,KAAaE,WACnBC,OAAQH,EAAAA,KACRI,MAAOJ,EAAAA,KAAaI,QAAQF,WAC5BG,QAASL,EAAAA,KAAaE,aAGxB,SAASI,EAAT,GAOI,IANFC,EAMC,EANDA,WACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,SAGA,IADC,EADDC,QAGE,OAAO,KAGT,IAAQC,GAAMC,EAAAA,EAAAA,kBAAND,EAER,OACEE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAD,CAAyBP,OAAAA,IACzBM,EAAAA,cAAAA,OAAAA,CAAME,IAAKV,EAAYW,UAAU,0BAA0BR,SAAUA,GACnEK,EAAAA,cAAAA,IAAAA,KAAIF,EAAE,yIACNE,EAAAA,cAAAA,QAAAA,OAAAA,OAAAA,CACEG,UAAU,aACVC,KAAK,OACLC,YAAgBP,EAAE,QAAP,KACPF,EAAS,UAEfI,EAAAA,cAAAA,QAAAA,OAAAA,OAAAA,CACEG,UAAU,aACVC,KAAK,OACLC,YAAgBP,EAAE,UAAP,KACPF,EAAS,YAEfI,EAAAA,cAAAA,QAAAA,OAAAA,OAAAA,CACEG,UAAU,aACVC,KAAK,QACLC,YAAgBP,EAAE,SAAP,KACPF,EAAS,WAEfI,EAAAA,cAAAA,WAAAA,OAAAA,OAAAA,CACEG,UAAU,aACVE,YAAgBP,EAAE,WAAP,IACXQ,KAAM,GACFV,EAAS,aAEfI,EAAAA,cAAAA,IAAAA,KACGF,EAAE,kGAELE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,uBACbH,EAAAA,cAACO,EAAAA,EAAD,CACEH,KAAK,SACLX,QAASA,EACTe,KAAMC,EAAAA,KAELX,EAAE,4BAqHf,IA7GA,YAGW,IAFTY,EAEQ,EAFRA,eACAlB,EACQ,EADRA,WAEMmB,GAAOC,EAAAA,EAAAA,UACLd,GAAMC,EAAAA,EAAAA,kBAAND,EAER,GAOGe,EAAAA,EAAAA,IAAQ,CACTC,UAAUC,EAAAA,EAAAA,GAAY/B,KANpBU,EAFJ,EACEsB,UACEtB,OAEFuB,EAJF,EAIEA,SACAC,EALF,EAKEA,aACAtB,EANF,EAMEA,SAKF,GAIIuB,EAAAA,EAAAA,IAAa,CACfC,WAAY,mBACZC,cAAe,kBAAMJ,EAAS,GAAI,CAAE3B,QAASgC,EAAAA,QAL7CC,EADF,EACEA,KACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,QAUF,OACEzB,EAAAA,cAAAA,UAAAA,CAASE,IAAKV,EAAYW,UAAU,6CAClCH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,aACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,2CACXL,EAAE,sBAELE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,8BACbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,qDACbH,EAAAA,cAAC0B,EAAAA,EAAD,CACEvB,UAAU,OACVwB,IAAI,oBACJC,IAAI,oBAHN,sBAKA5B,EAAAA,cAAC6B,EAAAA,EAAD,CAAgBC,KAAMpB,EAAeqB,QAAQD,KAAKC,UAClD/B,EAAAA,cAACgC,EAAAA,EAAD,CAAcF,KAAMpB,EAAetB,OAAO0C,KAAK1C,SAC/CY,EAAAA,cAACiC,EAAAA,EAAD,CAAcH,KAAMpB,EAAerB,MAAMyC,KAAKzC,QAC9CW,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,mEACbH,EAAAA,cAAAA,OAAAA,MACAA,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,aACbH,EAAAA,cAAAA,IAAAA,CACEG,UAAU,cACV+B,KAAK,yCACL,aAAW,iBAEXlC,EAAAA,cAACmC,EAAAA,EAAD,CAAiB3B,KAAM4B,EAAAA,OAEzBpC,EAAAA,cAAAA,IAAAA,CACEG,UAAU,cACV+B,KAAK,yCACL,aAAW,kBAEXlC,EAAAA,cAACmC,EAAAA,EAAD,CAAiB3B,KAAM6B,EAAAA,OAEzBrC,EAAAA,cAAAA,IAAAA,CACEG,UAAU,cACV+B,KAAK,gDACL,aAAW,iBAEXlC,EAAAA,cAACmC,EAAAA,EAAD,CAAiB3B,KAAM8B,EAAAA,OAEzBtC,EAAAA,cAAAA,IAAAA,CACEG,UAAU,cACV+B,KAAK,mCACL,aAAW,gBAEXlC,EAAAA,cAACmC,EAAAA,EAAD,CAAiB3B,KAAM+B,EAAAA,SAI7BvC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC0B,EAAAA,EAAD,CACEvB,UAAU,OACVwB,IAAI,wBACJC,IAAI,cACJvB,YAAY,YAJd,sBAMAL,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,SAAAA,KAAAA,kBADF,8EAKJA,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,iBACbH,EAAAA,cAACwC,EAAAA,EAAD,CAAoB3C,QAAS4B,IAC7BzB,EAAAA,cAACT,EAAD,CACEG,OAAAA,EACAF,WAAYmB,EACZhB,SAAUuB,GAtEtB,WACEK,EAAKZ,EAAK8B,YAsEAhD,QAAS+B,EACT5B,SAAAA,EACAC,SAAU4B,U,uDC5JxB,IA7BA,aAA+B,UAC7B,OAA8BiB,EAAAA,EAAAA,WAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KAGA,OACE5C,EAAAA,cAAAA,MAAAA,CACEG,UAAU,2CACV0C,aAAc,kBAAMD,GAAW,KAC7BD,GACA3C,EAAAA,cAAAA,SAAAA,CACEG,UAAU,yBACVwB,IATO,8RAUPmB,iBAAe,EACfC,MAAM,MACNC,OAAO,QAGXhD,EAAAA,cAAC0B,EAAAA,EAAD,CACEvB,UAAU,uDACVwB,IAAI,iBACJC,IAAI,oCACJvB,YAAY,UACZ4C,OAAO,YACPC,UAAU,QANZ,yB,+FCZN,SAASC,EAAT,GAKI,IAJFC,EAIC,EAJDA,GACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,IACAC,EACC,EADDA,QAGA,OACEvD,EAAAA,cAAAA,IAAAA,CACEG,UAAU,MACVqD,IAAKJ,EACLlB,KAAMmB,EACNI,OAAO,UAGPzD,EAAAA,cAAC0D,EAAAA,EAAD,CAAaC,OAAOC,EAAAA,EAAAA,GAASN,GAAM1B,IAAK2B,KA8E9C,IAzEA,aAA+B,UAC7B,IAAMM,GAASjD,EAAAA,EAAAA,UACPd,GAAMC,EAAAA,EAAAA,kBAAND,EAEAgE,GAAoBC,EAAAA,EAAAA,gBAAe,cAAnCD,gBAuBR,OACE9D,EAAAA,cAAAA,UAAAA,CAASG,UAAU,oBACjBH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,8BACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,kCACXL,EAAE,2BAELE,EAAAA,cAAAA,IAAAA,CACEkC,KAAK,0CACLuB,OAAO,SACPtD,UAAU,kBAHZ,kBAQFH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,YACbH,EAAAA,cAACgE,EAAAA,QAAD,CACEC,aAAc,EACdC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRlE,IAAK2D,EACLQ,WAAY,CAAC,CACXC,WAAY,KACZC,SAAU,CACRN,aAAc,IAEf,CACDK,WAAY,IACZC,SAAU,CACRN,aAAc,MAIjBH,EAAgBU,MAAMC,KAAI,SAAAC,GAAM,OAAI1E,EAAAA,cAACmD,EAAeuB,OAEvD1E,EAAAA,cAAC2E,EAAAA,EAAD,CACExE,UAAU,2EACVyE,UAAU,QAEVC,QAAS,kBAAMhB,EAAOpB,QAAQqC,mB,4GCrExC,MAtBA,YAA0B,IAAThD,EAAQ,EAARA,KACf,IAAKA,EACH,OAAO,KAGT,IAAQiD,EAAkBjD,EAAlBiD,QAASC,EAASlD,EAATkD,KACjB,OACEhF,EAAAA,cAAAA,UAAAA,CAASG,UAAU,6BACjBH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,oDACbH,EAAAA,cAACiF,EAAAA,EAAD,CACE9E,UAAU,0EACV2B,KAAMiD,EAAQjD,KAAKiD,UAErB/E,EAAAA,cAACiF,EAAAA,EAAD,CACE9E,UAAU,iBACV2B,KAAMkD,EAAKlD,KAAKkD,U,oBCY1B,MAzBA,YAA+B,IAATlD,EAAQ,EAARA,KACZhC,GAAMC,EAAAA,EAAAA,kBAAND,EACFoF,EAAsBpD,EAAKqD,QAAO,sBAAGC,QAE3C,OACEpF,EAAAA,cAAAA,UAAAA,CAASG,UAAU,gBACjBH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,6BACXL,EAAE,gBAELE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,wDACZ+E,EAAoBT,KAAI,YAAmB,IAAhBW,EAAe,EAAfA,KAAMhC,EAAS,EAATA,GAChC,OACEpD,EAAAA,cAAC0D,EAAAA,EAAD,CACEF,IAAKJ,EAELO,OAAOC,EAAAA,EAAAA,GAASwB,EAAMC,WACtBzD,IAAKwD,EAAME,wBCSzB,MA1BA,YAAkC,IAC1BC,EADyB,EAARzD,KACaqD,QAAO,sBAAGC,QACtCtF,GAAMC,EAAAA,EAAAA,kBAAND,EAER,OACEE,EAAAA,cAAAA,UAAAA,CAASG,UAAU,gBACjBH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,6BACXL,EAAE,iCAELE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,wDACZoF,EAAuBd,KAAI,YAAmB,IAAhBW,EAAe,EAAfA,KAAMhC,EAAS,EAATA,GACnC,OACEpD,EAAAA,cAAC0D,EAAAA,EAAD,CACEF,IAAKJ,EAELO,OAAOC,EAAAA,EAAAA,GAASwB,EAAMC,WACtBzD,IAAKwD,EAAME,gBACXpC,UAAU,kB,UCSxB,MA1BA,YAEW,IACHsC,EAAyB,CAC7B,QACA,aAOF,OAVQ,EADRC,OAQED,EAAuBE,KAAK,gBAI5B1F,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,qBAAqB,WAAS,UAAU,oBACrDH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,yBAAyB4C,MAAM,KAAKC,OAAO,MAAM2C,QAAQ,aAAaC,KAAK,OAAOC,MAAM,8BACrG7F,EAAAA,cAAAA,OAAAA,CAAM8F,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,aAAaC,OAAO,YACpElG,EAAAA,cAAAA,SAAAA,CAAQmG,GAAG,MAAMC,GAAG,QAAQC,EAAE,MAAMT,KAAK,aAE3C5F,EAAAA,cAAAA,MAAAA,CAAKG,UAAWqF,EAAuBc,KAAK,KAAMvD,MAAM,MAAMC,OAAO,MAAM2C,QAAQ,cAAcC,KAAK,OAAOC,MAAM,8BACjH7F,EAAAA,cAAAA,OAAAA,CAAMuG,EAAE,4BAA4BL,OAAO,YAC3ClG,EAAAA,cAAAA,SAAAA,CAAQmG,GAAG,MAAMC,GAAG,QAAQC,EAAE,MAAMT,KAAK,eCjB3CY,EAAsB,CAC1B,OACA,eACA,YACA,YAGF,SAASC,EAAT,GAMI,IALF9C,EAKC,EALDA,MACA+C,EAIC,EAJDA,MACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,MACAC,EACC,EADDA,WAIMC,EAAsB,CAC1B,OACA,WACA,cACA,iBACA,eACA,SACA,aAGIrB,GAASiB,EAAQ,GAAK,EACxBK,EAA+B,CAAC,IA0BpC,OAxBItB,GACFsB,EAA4B,UACvBP,EADuB,CAE1B,UACA,kBAGFM,EAAoBpB,KAClB,gBAIFoB,EAAoBpB,KAClB,sBACA,aAGFqB,EAA4B,UACvBP,EADuB,CAE1B,UACA,mBAKFxG,EAAAA,cAAAA,MAAAA,CACEG,UAAU,8EACV,WAAS,UACT,oBAEAH,EAAAA,cAAAA,MAAAA,CAAKG,UAAW2G,EAAoBR,KAAK,MACvCtG,EAAAA,cAAAA,MAAAA,CAAKG,UAAW4G,EAA6BT,KAAK,MAChDtG,EAAAA,cAAC0D,EAAAA,EAAD,CACEvD,UAAU,0DAEVwD,OAAOC,EAAAA,EAAAA,GAASD,EAAM0B,WACtBzD,IAAK+B,EAAM2B,mBAGftF,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,uBACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,yBAAyByG,GACvC5G,EAAAA,cAACiF,EAAAA,EAAD,CAAe9E,UAAU,UAAU2B,KAAM,CAAE6E,aAAAA,MAE7C3G,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,eAEfuG,EAAQ,EAAIG,EAAa7G,EAAAA,cAACgH,EAAD,CAAyBvB,MAAOwB,QAAQxB,KAAe,IA6BxF,MAxBA,YAA4B,IAAT3D,EAAQ,EAARA,KACThC,GAAMC,EAAAA,EAAAA,kBAAND,EAER,OACEE,EAAAA,cAAAA,UAAAA,CAASG,UAAU,QACjBH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,mCACXL,EAAE,aAELE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,iBACZ2B,EAAK2C,KAAI,SAACyC,EAAMR,GAAP,OACR1G,EAAAA,cAACyG,EAAD,eACEjD,IAAK0D,EAAK9D,IACN8D,EAFN,CAIIR,MAAAA,EACAG,WAAY/E,EAAKqF,gB,mBCpD/B,MA3CA,YAA6B,IAATrF,EAAQ,EAARA,KACVhC,GAAMC,EAAAA,EAAAA,kBAAND,EAER,OACEE,EAAAA,cAAAA,UAAAA,CAASG,UAAU,kCACjBH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,yBACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,uBACXL,EAAE,eAELE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,0FACZ2B,EAAK2C,KAAI,gBACRjE,EADQ,EACRA,KACA4G,EAFQ,EAERA,WACAhE,EAHQ,EAGRA,GACAiE,EAJQ,EAIRA,KACAT,EALQ,EAKRA,MALQ,OAOR5G,EAAAA,cAACsH,EAAAA,KAAD,CACEnH,UAAU,iGACVqD,IAAKJ,EACLmE,GAAE,YAAcF,GAEhBrH,EAAAA,cAAAA,OAAAA,CAAMG,UAAU,qBAEdH,EAAAA,cAAC0D,EAAAA,EAAD,CAAavD,UAAU,qBAAqBwD,OAAOC,EAAAA,EAAAA,GAASpD,EAAK6E,WAAYzD,IAAKpB,EAAK8E,kBAEvFtF,EAAAA,cAAC0D,EAAAA,EAAD,CAAavD,UAAU,oCAAoCwD,OAAOC,EAAAA,EAAAA,GAASwD,EAAW/B,WAAYzD,IAAKwF,EAAW9B,mBAEpHtF,EAAAA,cAAAA,OAAAA,KAAO4G,QAIb5G,EAAAA,cAACwH,EAAAA,EAAD,CACED,GAAG,mBACH/G,KAAMC,EAAAA,KAELX,EAAE,kB,8BC8Bb,MAhEA,YAAiC,IAATgC,EAAQ,EAARA,KAShB+B,GAASjD,EAAAA,EAAAA,UACT6G,EAAqB,CACzB,WACA,cACA,aACA,QACA,WACA,SACA,QAIIC,GAAiBC,EAAAA,EAAAA,GAAIC,MAAM,IAAIC,QAAQpD,KAAI,kBAAM3C,EAAK,MACpDhC,GAAMC,EAAAA,EAAAA,kBAAND,EAER,OACEE,EAAAA,cAAAA,UAAAA,CAASG,UAAU,kCACjBH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,yBACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,uBACXL,EAAE,mBAGPE,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,+CACbH,EAAAA,cAAC2E,EAAAA,EAAD,CAAWxE,UAAW,UAAIsH,EAAJ,CAAwB,WAAUnB,KAAK,KAAM1B,UAAU,OAAOC,QAAS,kBAAMhB,EAAOpB,QAAQqF,eAClH9H,EAAAA,cAACgE,EAAAA,EAAD,eAAQ9D,IAAK2D,EAAQ1D,UAAU,mBAhCpB,CACf4H,YAAY,EACZC,cAAe,EACfC,MAAO,IACPhE,aAAc,EACdG,QAAQ,IA4BDsD,EAAejD,KAAI,WAIjBiC,GAJiB,IAClBwB,EADkB,EAClBA,aACA9E,EAFkB,EAElBA,GACAiE,EAHkB,EAGlBA,KAHkB,OAKlBrH,EAAAA,cAACsH,EAAAA,KAAD,CACEnH,UAAU,kFACVqD,IAAQJ,EAAL,IAAWsD,EACda,GAAE,SAAWF,GAGbrH,EAAAA,cAAC0D,EAAAA,EAAD,CAAaC,OAAOC,EAAAA,EAAAA,GAASsE,EAAa7C,WAAYzD,IAAKsG,EAAa5C,uBAK9EtF,EAAAA,cAAC2E,EAAAA,EAAD,CAAWxE,UAAW,UAAIsH,EAAJ,CAAwB,YAAWnB,KAAK,KAAM1B,UAAU,QAAQC,QAAS,kBAAMhB,EAAOpB,QAAQqC,gBAEtH9E,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,yBACbH,EAAAA,cAACwH,EAAAA,EAAD,CACED,GAAG,SACH/G,KAAMC,EAAAA,KAELX,EAAE,kB,oBC6Kb,EAjOkB,SAACqI,GACjB,IAAQC,EAAgBD,EAAhBC,YACR,EAIID,EAAMrG,KAHRuG,EADF,EACEA,aACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,WAIAC,EAEEH,EAFFG,gBACA9H,EACE2H,EADF3H,eAIA+H,EAKEF,EALFE,cACAC,EAIEH,EAJFG,MACAC,EAGEJ,EAHFI,WACAC,EAEEL,EAFFK,QACAC,EACEN,EADFM,aAGF,OACE7I,EAAAA,cAAC8I,EAAAA,EAAD,CAAQC,UAAQ,GACd/I,EAAAA,cAACgJ,EAAAA,EAAD,CACEC,IAAK,CACHC,UAAW,uBACXC,YAAaX,EACbY,KAAMhB,EAAYiB,iBAItBrJ,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACsJ,EAAD,CAAOxH,KAAM4G,IACb1I,EAAAA,cAACuJ,EAAD,CAAYzH,KAAM6G,IAClB3I,EAAAA,cAACwJ,EAAD,CAAU1H,KAAMwG,EAASmB,cAAchF,KAAI,qBAAGiF,aAC9C1J,EAAAA,cAAC2J,EAAD,CAAS7H,KAAM8G,IACf5I,EAAAA,cAAC4J,EAAD,CAAc9H,KAAM+G,IACpB7I,EAAAA,cAAC6J,EAAD,CAAe/H,KAAM2G,IACrBzI,EAAAA,cAAC8J,EAAAA,EAAD,MACA9J,EAAAA,cAAC+J,EAAAA,EAAD,MACA/J,EAAAA,cAACgK,EAAAA,EAAD,CAA4BtJ,eAAAA,Q,qBCvDrB,SAASuJ,EAA0BrL,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIsL,UAAU,gC","sources":["webpack://advisoryapps-v3/./node_modules/react-slick/lib/index.js","webpack://advisoryapps-v3/./src/components/free-consultation-form/index.tsx","webpack://advisoryapps-v3/./src/components/google-map/index.tsx","webpack://advisoryapps-v3/./src/components/instagram.tsx","webpack://advisoryapps-v3/./src/components/home/intro.tsx","webpack://advisoryapps-v3/./src/components/home/our-clients.tsx","webpack://advisoryapps-v3/./src/components/home/achieve-collab.tsx","webpack://advisoryapps-v3/./src/components/home/vertical-separator.tsx","webpack://advisoryapps-v3/./src/components/home/our-flow.tsx","webpack://advisoryapps-v3/./src/components/home/what-we-do.tsx","webpack://advisoryapps-v3/./src/components/home/our-portfolio.tsx","webpack://advisoryapps-v3/./src/pages/index.tsx","webpack://advisoryapps-v3/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slider = _interopRequireDefault(require(\"./slider\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _default = _slider[\"default\"];\nexports[\"default\"] = _default;","import React, { MutableRefObject, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF, faInstagram, faLinkedinIn, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport ContactAddress from '../contact/contact-address';\nimport ContactPhone from '../contact/contact-phone';\nimport ContactEmail from '../contact/contact-email';\nimport * as yup from 'yup'\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport FormErrorMessages from '../form/form-error-messages';\nimport { formSubmitErrorMessage, useSendEmail } from '../form/email';\nimport { IconButton } from '../icon-link-button';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport FormSuccessMessage from '../form/form-success-message';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport { graphql } from 'gatsby';\n\ntype Props = {\n  contactDetails: any;\n  forwardRef?: MutableRefObject<any>;\n}\n\nconst schema = yup.object({\n  name: yup.string().required(),\n  number: yup.string(),\n  email: yup.string().email().required(),\n  message: yup.string().required(),\n});\n\nfunction Form({\n  forwardRef,\n  loading,\n  errors,\n  onSubmit,\n  register,\n  visible,\n}) {\n  if (!visible) {\n    return null;\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <FormErrorMessages {...{ errors }} />\n      <form ref={forwardRef} className=\"flex flex-col space-y-4\" onSubmit={onSubmit}>\n        <p>{t('Interested in our services? Request for quotation and free consultation now! Feel free to call, email or use the contact form below.')}</p>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          placeholder={`${t('name')}*`}\n          {...register('name')}\n        />\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          placeholder={`${t('number')}*`}\n          {...register('number')}\n        />\n        <input\n          className=\"form-input\"\n          type=\"email\"\n          placeholder={`${t('email')}*`}\n          {...register('email')}\n        />\n        <textarea\n          className=\"form-input\"\n          placeholder={`${t('message')}*`}\n          rows={4}\n          {...register('message')}\n        />\n        <p>\n          {t('This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply.')}\n        </p>\n        <div className=\"flex lg:justify-end\">\n          <IconButton\n            type=\"submit\"\n            loading={loading}\n            icon={faChevronRight}\n          >\n            {t('get free consult now')}\n          </IconButton>\n        </div>\n      </form>\n    </>\n  )\n}\n\nfunction FreeConsultationForm({\n  contactDetails,\n  forwardRef,\n}: Props) {\n  const form = useRef()\n  const { t } = useTranslation()\n\n  const {\n    formState: {\n      errors,\n    },\n    setError,\n    handleSubmit,\n    register,\n  }= useForm({\n    resolver: yupResolver(schema),\n  });\n  \n  const {\n    send,\n    submitting,\n    success,\n  } = useSendEmail({\n    templateId: 'template_l62oxtn',\n    errorCallback: () => setError('', { message: formSubmitErrorMessage }),\n  })\n\n  function onSubmit() {\n    send(form.current)\n  };\n\n  return (\n    <section ref={forwardRef} className=\"bg-concrete py-20 sm:text-xl form-section\">\n      <div className=\"container\">\n        <h2 className=\"section-title text-center md-6 md:mb-16\">\n          {t('free consultation')}\n        </h2>\n        <div className=\"grid lg:grid-cols-5 gap-20\">\n          <div className=\"order-last lg:order-first lg:col-span-2 space-y-4\">\n            <StaticImage\n              className=\"mb-4\"\n              src=\"logos/logo-aa.png\"\n              alt=\"Logo AdvisoryApps\"\n            />\n            <ContactAddress data={contactDetails.address.data.address} />\n            <ContactPhone data={contactDetails.number.data.number} />\n            <ContactEmail data={contactDetails.email.data.email} />\n            <div className=\"free-consult-info-block pb-6 border-b-[1px] border-secondary/10\">\n              <span />\n              <div className=\"space-x-3\">\n                <a\n                  className=\"social-icon\"\n                  href=\"https://www.facebook.com/AdvisoryApps/\"\n                  aria-label=\"Facebook link\"\n                >\n                  <FontAwesomeIcon icon={faFacebookF} />\n                </a>\n                <a\n                  className=\"social-icon\"\n                  href=\"https://www.instagram.com/advisoryapps\"\n                  aria-label=\"Instagram link\"\n                >\n                  <FontAwesomeIcon icon={faInstagram} />\n                </a>\n                <a\n                  className=\"social-icon\"\n                  href=\"https://www.linkedin.com/company/advisoryapps\"\n                  aria-label=\"Linkedin link\"\n                >\n                  <FontAwesomeIcon icon={faLinkedinIn} />\n                </a>\n                <a\n                  className=\"social-icon\"\n                  href=\"https://twitter.com/AdvisoryApps\"\n                  aria-label=\"Twitter link\"\n                >\n                  <FontAwesomeIcon icon={faTwitter} />\n                </a>\n              </div>\n            </div>\n            <div>\n              <StaticImage\n                className=\"mb-8\"\n                src=\"logos/logo-gempak.png\"\n                alt=\"Logo Gempak\"\n                placeholder=\"tracedSVG\"\n              />\n              <div>\n                <strong>Gempak Sdn Bhd</strong>[1364820-M] is a subsidiary company of Advisory Apps Sdn Bhd [1176817-H]\n              </div>\n            </div>\n          </div>\n          <div className=\"lg:col-span-3\">\n            <FormSuccessMessage visible={success} />\n            <Form {...{\n              errors,\n              forwardRef: form,\n              onSubmit: handleSubmit(onSubmit),\n              loading: submitting,\n              register,\n              visible: !success,\n            }}/>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default FreeConsultationForm","import { StaticImage } from 'gatsby-plugin-image';\nimport React, { useState } from 'react'\n\ntype Props = {}\n\nfunction GoogleMap({}: Props) {\n  const [loadMap, setLoadMap] = useState(false);\n  const mapSrc = 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2817.043732782965!2d101.67890661599225!3d3.1207622451135757!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31cc4ec19ac9a429%3A0x7f1220a9d1ad79cf!2sAdvisory%20Apps%20Sdn.%20Bhd.!5e0!3m2!1sen!2smy!4v1592379982336!5m2!1sen!2smy';\n\n  return (\n    <div\n      className=\"relative w-screen h-[200px] md:h-[330px]\"\n      onMouseEnter={() => setLoadMap(true)}>\n      { loadMap && (\n        <iframe\n          className=\"absolute w-full h-full\"\n          src={mapSrc}\n          allowFullScreen\n          width=\"600\"\n          height=\"200\"\n        />\n      )}\n      <StaticImage\n        className=\"absolute -z-[1] m-auto left-0 right-0 top-0 bottom-0\"\n        src=\"map-static.png\"\n        alt=\"AdvisoryApps office on google map\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        objectFit=\"cover\"\n      />\n    </div>\n  )\n}\n\nexport default GoogleMap","import { graphql, useStaticQuery } from 'gatsby';\nimport { GatsbyImage, getImage, StaticImage } from 'gatsby-plugin-image';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport React from 'react'\nimport { useRef } from 'react';\nimport Slider from 'react-slick/lib/slider';\nimport SliderNav from './slider/slider-nav';\n\ntype Props = {}\n\nfunction ImageSlide({\n  id,\n  permalink,\n  img,\n  caption,\n}) {\n\n  return (\n    <a\n      className=\"p-4\"\n      key={id}\n      href={permalink}\n      target=\"_blank\"\n    >\n      {/* @ts-ignore-next-line */}\n      <GatsbyImage image={getImage(img)} alt={caption} />\n    </a>\n  )\n}\n\nfunction Instagram({}: Props) {\n  const slider = useRef()\n  const { t } = useTranslation()\n\n  const { allStrapiIgPost } = useStaticQuery(graphql`\n    query {\n      allStrapiIgPost {\n        nodes {\n          id\n          caption\n          permalink\n          publishedAt\n          mediaType\n          img {\n            childImageSharp {\n              gatsbyImageData(\n                width: 250\n                height: 250\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <section className=\"px-6 py-16 pb-20\">\n      <div className=\"container text-center mb-8\">\n        <h2 className=\"section-title text-center mb-2\">\n          {t('follow us on instagram')}\n        </h2>\n        <a\n          href=\"https://www.instagram.com/advisoryapps/\"\n          target=\"_blank\"\n          className=\"text-secondary\"\n        >\n          @advisoryapps\n        </a>\n      </div>\n      <div className=\"relative\">\n        <Slider {...{\n          slidesToShow: 5,\n          lazyLoad: true,\n          infinite: true,\n          arrows: false,\n          ref: slider,\n          responsive: [{\n            breakpoint: 1023,\n            settings: {\n              slidesToShow: 3,\n            }\n          }, {\n            breakpoint: 639,\n            settings: {\n              slidesToShow: 2,\n            }\n          }]\n        }}>\n          {allStrapiIgPost.nodes.map(igPost => <ImageSlide {...igPost} />)}\n        </Slider>\n        <SliderNav\n          className=\"absolute right-0 top-0 bottom-0 inline-flex items-center p-4 bg-white/30\"\n          direction=\"right\"\n          // @ts-ignore-next-line\n          onClick={() => slider.current.slickNext()}\n        />\n      </div>\n    </section>\n  )\n}\n\nexport default Instagram","import React from 'react'\nimport BlockRichText from '../block-rich-text';\n\ntype Props = {}\n\nfunction Intro({ data }) {\n  if (!data) {\n    return null;\n  }\n\n  const { heading, body } = data;\n  return (\n    <section className=\"bg-slant-right mt-24 mb-7\">\n      <div className=\"container flex flex-col lg:flex-row md:space-x-8\">\n        <BlockRichText\n          className=\"flex-1 text-[30px] md:text-[50px] text-right lg:pl-24 mb-4 leading-none\"\n          data={heading.data.heading}\n        />\n        <BlockRichText\n          className=\"flex-1 text-xl\"\n          data={body.data.body}\n        />\n      </div>\n    </section>\n  )\n}\n\nexport default Intro","import { graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport React from 'react'\n\ntype Props = {}\n\nfunction OurClients({ data }) {\n  const { t } = useTranslation()\n  const processedOurClients = data.filter(({ file }) => !!file);\n\n  return (\n    <section className=\"home-section\">\n      <h2 className=\"section-title text-center\">\n        {t('our clients')}\n      </h2>\n      <div className=\"grid grid-cols-2 gap-3 md:grid-cols-3 lg:grid-cols-5\">\n        {processedOurClients.map(({ file, id }) => {\n          return (\n            <GatsbyImage\n              key={id}\n              // @ts-ignore-next-line\n              image={getImage(file!.localFile as IGatsbyImageData)}\n              alt={file!.alternativeText}\n            />\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default OurClients","import { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport React from 'react'\n\ntype Props = {}\n\nfunction AchieveCollab({ data }) {\n  const processedAchieveCollab = data.filter(({ file }) => !!file);\n  const { t } = useTranslation()\n\n  return (\n    <section className=\"home-section\">\n      <h2 className=\"section-title text-center\">\n        {t('achievements & collaboration')}\n      </h2>\n      <div className=\"grid grid-cols-2 gap-6 md:grid-cols-3 lg:grid-cols-5\">\n        {processedAchieveCollab.map(({ file, id }) => {\n          return (\n            <GatsbyImage\n              key={id}\n              // @ts-ignore-next-line\n              image={getImage(file!.localFile as IGatsbyImageData)}\n              alt={file!.alternativeText}\n              objectFit=\"contain\"\n            />\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default AchieveCollab","import React from 'react'\n\ntype Props = {\n  isOdd: boolean;\n}\n\nfunction VerticalSeparator({\n  isOdd,\n}: Props) {\n  const mobileSeparatorClasses = [\n    'block',\n    'sm:hidden',\n  ];\n\n  if (isOdd) {\n    mobileSeparatorClasses.push('-scale-x-100');\n  }\n\n  return (\n    <div className=\"vertical-separator\" data-aos=\"drawing\" data-aos-once>\n      <svg className=\"hidden sm:inline-block\" width=\"11\" height=\"106\" viewBox=\"0 0 11 106\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <line x1=\"5.50002\" y1=\"100.005\" x2=\"4.59097\" y2=\"0.00867583\" stroke=\"#926A23\"></line>\n        <circle cx=\"5.5\" cy=\"100.5\" r=\"5.5\" fill=\"#926A23\"></circle>\n      </svg>\n      <svg className={mobileSeparatorClasses.join(' ')} width=\"121\" height=\"147\" viewBox=\"0 0 121 147\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M120.5 0V77.5H3.5L3.5 144\" stroke=\"#926A23\"></path>\n        <circle cx=\"3.5\" cy=\"143.5\" r=\"3.5\" fill=\"#926A23\"></circle>\n      </svg>\n    </div>\n  )\n}\n\nexport default VerticalSeparator","import { graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport React from 'react'\nimport BlockRichText from '../block-rich-text';\nimport VerticalSeparator from './vertical-separator';\n\ntype Props = {}\n\nconst imageWrapperClasses = [\n  'flex',\n  'items-center',\n  'basis-1/3',\n  'relative',\n]\n\nfunction ImageContent({\n  image,\n  index,\n  richTextBody,\n  title,\n  totalCount,\n}) {\n  // Could replace these with odd:utils\n  // https://tailwindcss.com/docs/hover-focus-and-other-states\n  const innerWrapperClasses = [\n    'flex',\n    'flex-col',\n    'md:flex-row',\n    'md:text-center',\n    'items-center',\n    'w-full',\n    'space-y-6',\n  ];\n\n  const isOdd = (index + 1) % 2;\n  let processedImageWrapperClasses = [''];\n\n  if (isOdd) {\n    processedImageWrapperClasses = [\n      ...imageWrapperClasses,\n      'mr-auto',\n      'md:mr-[unset]',\n    ]\n\n    innerWrapperClasses.push(\n      'text-right',\n    );\n\n  } else {\n    innerWrapperClasses.push(\n      'md:flex-row-reverse',\n      'text-left'\n    )\n\n    processedImageWrapperClasses = [\n      ...imageWrapperClasses,\n      'ml-auto',\n      'md:ml-[unset]',\n    ]\n  }\n\n  return (\n    <div\n      className=\"px-4 sm:px-16 md:px-0 flex flex-col items-center space-y-4 mb-[100px] group\"\n      data-aos='fade-in'\n      data-aos-once\n    >\n      <div className={innerWrapperClasses.join(' ')}>\n        <div className={processedImageWrapperClasses.join(' ')}>\n          <GatsbyImage\n            className=\"md:!absolute group-odd:left-0 m-auto group-even:right-0\"\n            // @ts-ignore-next-line\n            image={getImage(image.localFile)}\n            alt={image.alternativeText}\n          />\n        </div>\n        <div className=\"basis-1/3 space-y-4\">\n          <h3 className=\"font-bold text-[32px]\">{title}</h3>\n          <BlockRichText className=\"text-xl\" data={{ richTextBody }} />\n        </div>\n        <div className=\"basic-1/3\" />\n      </div>\n      { index + 1 < totalCount ? <VerticalSeparator {...{ isOdd: Boolean(isOdd) }} /> : ''}\n    </div>\n  )\n}\n\nfunction OurFlow({ data }) {\n  const { t } = useTranslation()\n\n  return (\n    <section className=\"py-8\">\n      <h2 className=\"section-title text-center mb-16\">\n        {t('our flow')}\n      </h2>\n      <div className=\"flex flex-col\">\n        {data.map((flow, index) => (\n          <ImageContent\n            key={flow.id}\n            {...flow}\n            {...{\n              index,\n              totalCount: data.length\n            }}\n          />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default OurFlow","import { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Link, useTranslation } from 'gatsby-plugin-react-i18next';\nimport React from 'react'\nimport { IconLink } from '../icon-link-button';\n\ntype Props = {}\n\nfunction WhatWeDo({ data }) {\n  const { t } = useTranslation()\n\n  return (\n    <section className=\"bg-slant-left py-[200px] mb-16\">\n      <div className=\"container text-center\">\n        <h2 className=\"section-title mb-16\">\n          {t('what we do')}\n        </h2>\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-6 gap-y-20 mb-[6rem] justify-around\">\n          {data.map(({\n            icon,\n            iconActive,\n            id,\n            slug,\n            title\n          }) => (\n            <Link\n              className=\"group inline-flex flex-col justify-center font-bold text-secondary hover:text-primary text-2xl\"\n              key={id}\n              to={`/service/${slug}`}\n            >\n              <span className=\"inline-block mb-4\">\n                {/* @ts-ignore-next-line */}\n                <GatsbyImage className=\"group-hover:hidden\" image={getImage(icon.localFile)} alt={icon.alternativeText} />\n                {/* @ts-ignore-next-line */}\n                <GatsbyImage className=\"!hidden group-hover:!inline-block\" image={getImage(iconActive.localFile)} alt={iconActive.alternativeText} />\n              </span>\n              <span>{title}</span>\n            </Link>\n          ))}\n        </div>\n        <IconLink\n          to=\"/service/systems\"\n          icon={faChevronRight}\n        >\n          {t('learn more')}\n        </IconLink>\n      </div>\n    </section>\n  )\n}\n\nexport default WhatWeDo","import { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport React from 'react'\nimport Slider from 'react-slick'\nimport SliderNav from '../slider/slider-nav'\nimport \"slick-carousel/slick/slick.css\"\nimport { useRef } from 'react'\nimport { useTranslation, Link } from 'gatsby-plugin-react-i18next'\nimport { IconLink } from '../icon-link-button'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction OurPortfolio({ data }) {\n  const settings = {\n    centerMode: true,\n    centerPadding: 1,\n    speed: 500,\n    slidesToShow: 3,\n    arrows: false,\n  }\n\n  const slider = useRef();\n  const sliderNavClassName = [\n    'absolute',\n    'text-[70px]',\n    'text-white',\n    'top-0',\n    'bottom-0',\n    'm-auto',\n    'z-10',\n  ]\n\n  // TODO - Remove on prod\n  const portfolioArray = [...Array(10).keys()].map(() => data[0]);\n  const { t } = useTranslation()\n\n  return (\n    <section className=\"bg-slant-right py-[160px] mb-6\">\n      <div className=\"container text-center\">\n        <h2 className=\"section-title mb-16\">\n          {t('our portfolio')}\n        </h2>\n      </div>\n      <div className=\"mb-[6rem] py-[100px] md:py-[180px] relative\">\n        <SliderNav className={[...sliderNavClassName, 'left-4'].join(' ')} direction=\"left\" onClick={() => slider.current.slickPrev()} />\n        <Slider ref={slider} className=\"slider our-flow\" {...settings}>\n          {portfolioArray.map(({\n            featureImage,\n            id,\n            slug,\n          }, index) => (\n            <Link\n              className=\"group inline-flex flex-col justify-center font-bold hover:text-primary text-2xl\"\n              key={`${id}-${index}`}\n              to={`/work/${slug}`}\n            >\n              {/* @ts-ignore-next-line */}\n              <GatsbyImage image={getImage(featureImage.localFile)} alt={featureImage.alternativeText} />\n              {/* @ts-ignore-next-line */}\n            </Link>\n          ))}\n        </Slider>\n        <SliderNav className={[...sliderNavClassName, 'right-4'].join(' ')} direction=\"right\" onClick={() => slider.current.slickNext()} />\n      </div>\n      <div className=\"container text-center\">\n        <IconLink\n          to=\"/works\"\n          icon={faChevronRight}\n        >\n          {t('learn more')}\n        </IconLink>\n      </div>\n    </section>\n  )\n}\n\nexport default OurPortfolio","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport BannerHome from \"../components/banner/home\"\nimport Intro from \"../components/home/intro\"\nimport OurClients from \"../components/home/our-clients\"\nimport AchieveCollab from \"../components/home/achieve-collab\"\nimport GoogleMap from \"../components/google-map\"\nimport OurFlow from \"../components/home/our-flow\"\nimport WhatWeDo from \"../components/home/what-we-do\"\nimport OurPortfolio from \"../components/home/our-portfolio\"\nimport FreeConsultationForm from \"../components/free-consultation-form\"\nimport Instagram from \"../components/instagram\"\n\nconst IndexPage = (props) => {\n  const { pageContext } = props\n  const {\n    strapiGlobal,\n    whatWeDo,\n    strapiHome,\n  } = props.data\n\n  const {\n    siteDescription,\n    contactDetails,\n  } = strapiGlobal;\n\n  const {\n    achieveCollab,\n    intro,\n    ourClients,\n    ourFlow,\n    ourPortfolio,\n  } = strapiHome;\n\n  return (\n    <Layout logoOnly>\n      <Seo\n        seo={{\n          metaTitle: \"We are Advisory Apps\",\n          description: siteDescription,\n          lang: pageContext.strapiLangKey,\n        }}\n      />\n      {/* <BannerHome /> */}\n      <main>\n        <Intro data={intro} />\n        <OurClients data={ourClients} />\n        <WhatWeDo data={whatWeDo.servicesOrder.map(({ service }) => service)} />\n        <OurFlow data={ourFlow} />\n        <OurPortfolio data={ourPortfolio} />\n        <AchieveCollab data={achieveCollab} />\n        <Instagram />\n        <GoogleMap />\n        <FreeConsultationForm {...{ contactDetails }} />\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  fragment Locales on LocaleConnection {\n    edges {\n      node {\n        ns\n        data\n        language\n      }\n    }\n  }\n\n  fragment ContactDetails on STRAPI_GLOBAL {\n    contactDetails {\n      number {\n        data {\n          number\n        }\n      }\n      address {\n        data {\n          address\n        }\n      }\n      email {\n        data {\n          email\n        }\n      }\n    }\n  }\n\n  fragment Icon on STRAPI__MEDIA {\n    alternativeText\n    localFile {\n      childImageSharp {\n        gatsbyImageData(\n          height: 100\n          placeholder: TRACED_SVG\n        )\n      }\n    }\n  }\n\n  fragment ServicesOrder on STRAPI_GLOBAL {\n    servicesOrder {\n      service {\n        id\n        title\n        slug\n        body {\n          data {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n        icon {\n          ...Icon\n        }\n        iconActive {\n          ...Icon\n        }\n      }\n    }\n  }\n\n  query (\n    $language: String!\n    $strapiLangKey: String!\n  ) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      ...Locales\n    }\n    strapiHome(locale: {eq: $strapiLangKey}) {\n      intro {\n        heading {\n          data {\n            heading\n          }\n        }\n        body {\n          data {\n            body\n          }\n        }\n      }  \n      ourClients {\n        id\n        file {\n          alternativeText\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                backgroundColor: \"white\"\n                transformOptions: {\n                  fit: CONTAIN\n                }\n                width: 300\n                height: 170\n                placeholder: TRACED_SVG\n              )\n            }\n          }\n        }\n      }\n      ourFlow {\n        id\n        title\n        richTextBody: content {\n          __typename\n          ... on STRAPI__COMPONENT_OUR_FLOW_OUR_FLOWContent {\n            data {\n              childMarkdownRemark {\n                html\n              }\n            }\n          }\n        }\n        image {\n          alternativeText\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                placeholder: TRACED_SVG\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n      ourPortfolio {\n        ... on STRAPI_WORK {\n          id\n          slug\n          featureImage {\n            alternativeText\n            localFile {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: TRACED_SVG\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n      achieveCollab {\n        id\n        file {\n          alternativeText\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                backgroundColor: \"white\"\n                transformOptions: {\n                  fit: CONTAIN\n                }\n                layout: CONSTRAINED, height: 100\n                placeholder: TRACED_SVG\n              )\n            }\n          }\n        }\n      }\n    }\n    strapiGlobal(locale: {eq: $strapiLangKey}) {\n      siteName\n      siteDescription\n      ...ContactDetails\n    }\n    whatWeDo: strapiGlobal(\n      locale: { eq: $strapiLangKey }\n    ) {\n      ...ServicesOrder\n    }\n  }\n`;\n\nexport default IndexPage\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"names":["obj","exports","_default","__esModule","schema","yup","name","required","number","email","message","Form","forwardRef","loading","errors","onSubmit","register","visible","t","useTranslation","React","FormErrorMessages","ref","className","type","placeholder","rows","IconButton","icon","faChevronRight","contactDetails","form","useRef","useForm","resolver","yupResolver","formState","setError","handleSubmit","useSendEmail","templateId","errorCallback","formSubmitErrorMessage","send","submitting","success","StaticImage","src","alt","ContactAddress","data","address","ContactPhone","ContactEmail","href","FontAwesomeIcon","faFacebookF","faInstagram","faLinkedinIn","faTwitter","FormSuccessMessage","current","useState","loadMap","setLoadMap","onMouseEnter","allowFullScreen","width","height","layout","objectFit","ImageSlide","id","permalink","img","caption","key","target","GatsbyImage","image","getImage","slider","allStrapiIgPost","useStaticQuery","Slider","slidesToShow","lazyLoad","infinite","arrows","responsive","breakpoint","settings","nodes","map","igPost","SliderNav","direction","onClick","slickNext","heading","body","BlockRichText","processedOurClients","filter","file","localFile","alternativeText","processedAchieveCollab","mobileSeparatorClasses","isOdd","push","viewBox","fill","xmlns","x1","y1","x2","y2","stroke","cx","cy","r","join","d","imageWrapperClasses","ImageContent","index","richTextBody","title","totalCount","innerWrapperClasses","processedImageWrapperClasses","VerticalSeparator","Boolean","flow","length","iconActive","slug","Link","to","IconLink","sliderNavClassName","portfolioArray","_toConsumableArray","Array","keys","slickPrev","centerMode","centerPadding","speed","featureImage","props","pageContext","strapiGlobal","whatWeDo","strapiHome","siteDescription","achieveCollab","intro","ourClients","ourFlow","ourPortfolio","Layout","logoOnly","Seo","seo","metaTitle","description","lang","strapiLangKey","Intro","OurClients","WhatWeDo","servicesOrder","service","OurFlow","OurPortfolio","AchieveCollab","Instagram","GoogleMap","FreeConsultationForm","_objectDestructuringEmpty","TypeError"],"sourceRoot":""}